@mixin break($size) {
		@media (max-width: $size) { @content; }
}

@mixin bgcover() {
  -webkit-background-size: cover;
     -moz-background-size: cover;
       -o-background-size: cover;
          background-size: cover;
}

@mixin clear() {
    &:before, &:after { content: " "; display: table; }
    &:after { clear: both; }
    *zoom: 1;
}

@mixin border-box() {
  -webkit-box-sizing: border-box; 
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin opacity($amount) {
  -webkit-opacity: $amount;
  -moz-opacity: $amount;
  opacity: $amount;
}

@mixin reset() {
  list-style: none;
  margin: 0;
  padding: 0;
}


@mixin rounded($rad) {
  -webkit-border-radius: $rad;
   -khtml-border-radius: $rad;
     -moz-border-radius: $rad;
          border-radius: $rad;
}

@mixin transition($props) {
  -webkit-transition: $props;
     -moz-transition: $props;
       -o-transition: $props;
          transition: $props;
}